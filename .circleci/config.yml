version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
  build-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  deploy-icp:
    docker:
      - image: cimg/node:22.10.0
    steps:
      - run:
          name: Install DFX and update PATH
          command: |
            # Set the environment variable for non-interactive installation
            export DFXVM_INIT_YES=true

            curl -fsSL https://internetcomputer.org/install.sh | sh

            echo 'source "$HOME/.local/share/dfx/env"' >> "$BASH_ENV"
      - run:
          name: Instantiate ICP user identity via the private key from environment variables
          command: | 
            export DFX_WARNING=-mainnet_plaintext_identity

            export TERM=xterm-256color

            echo $PRIVATE_KEY > private_key.pem

            dfx identity import aimpact_deployment private_key.pem --storage-mode plaintext

            echo "Balance: $(dfx cycles balance --network ic --identity aimpact_deployment)"

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
      - run:
          name: found github actions config
          command: ':'
workflows:
  build-and-test:
    jobs:
      # - test-node
      # - build-node:
      #     requires:
      #       - test-node
      - deploy-icp #:
          # requires:
          #   - build-node
      # - deploy:
      #     requires:
      #       - build-node
